<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>追梦赤子心的个人博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wangchangjin123.github.io/"/>
  <updated>2020-06-04T08:52:34.205Z</updated>
  <id>https://wangchangjin123.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>VS code 调试Cmake 工程</title>
    <link href="https://wangchangjin123.github.io/2020/06/04/vscode-catkin/"/>
    <id>https://wangchangjin123.github.io/2020/06/04/vscode-catkin/</id>
    <published>2020-06-04T08:49:49.000Z</published>
    <updated>2020-06-04T08:52:34.205Z</updated>
    
    <content type="html"><![CDATA[<h3 id="vs-code-调试cmake-工程"><a class="markdownIt-Anchor" href="#vs-code-调试cmake-工程"></a> VS code 调试Cmake 工程：</h3><p><strong>VS code  及cmake 安装步骤请参考</strong>：</p><p><a href="https://blog.csdn.net/MakerCloud/article/details/93545513" target="_blank" rel="noopener">VSCode CMake 安装与配置详解</a></p><p>下载安装cmake，并添加到环境变量（重启后生效）</p><h4 id="一编写-cmake-工程框架-文件"><a class="markdownIt-Anchor" href="#一编写-cmake-工程框架-文件"></a> 一：编写 cmake 工程框架 文件</h4><p>使用【Ctrl+Shift+p】 输入：CMake:Configure</p><p><img src="/2020/06/04/vscode-catkin/1.png" alt></p><p>创建一个Cmake 工程框架，自动生成Cmakelists.txt 文件，通用工程框架如下：</p><p><img src="/2020/06/04/vscode-catkin/2.png" alt></p><p>以上创建Cmake 工程 网上例程很多，但是VS code 调试 C++ 代码，如果利用传统的配置task.json,对于大量.cpp,.h构成的工程显得比较繁琐， Cmakelist 解决了这个问题。但是 VS code Cmake 插件只能编译不能调试，网上相关例程并不是很多。那么如何在VS code下调试 Cmake 工程？</p><p>很简单，在 launch.json 和 task.json 加入几行代码即可。</p><h3 id="二-配置-launchjson-和taskjson"><a class="markdownIt-Anchor" href="#二-配置-launchjson-和taskjson"></a> 二、配置 launch.json 和task.json</h3><h5 id="launchjson-配置如下"><a class="markdownIt-Anchor" href="#launchjson-配置如下"></a> launch.json 配置如下：</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"0.2.0"</span>,</span><br><span class="line">    <span class="attr">"configurations"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"debug"</span>,</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"cppdbg"</span>,</span><br><span class="line">            <span class="attr">"request"</span>: <span class="string">"launch"</span>,</span><br><span class="line">            <span class="attr">"program"</span>: <span class="string">"$&#123;fileDirname&#125;\\build\\leecode_node.exe"</span>, <span class="comment">//这个地方换成自己要调试的 .exe，注意切换到build 文件夹下，作为编译输出文件夹</span></span><br><span class="line">            <span class="attr">"args"</span>: [],</span><br><span class="line">            <span class="attr">"stopAtEntry"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">"cwd"</span>: <span class="string">"$&#123;workspaceFolder&#125;"</span>,</span><br><span class="line">            <span class="attr">"environment"</span>: [],</span><br><span class="line">            <span class="attr">"externalConsole"</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">"MIMode"</span>: <span class="string">"gdb"</span>,</span><br><span class="line">            <span class="attr">"miDebuggerPath"</span>: <span class="string">"C:\\mingw64\\bin\\gdb.exe"</span>, </span><br><span class="line">            <span class="attr">"setupCommands"</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"description"</span>: <span class="string">"Enable pretty-printing for gdb"</span>,</span><br><span class="line">                    <span class="attr">"text"</span>: <span class="string">"-enable-pretty-printing"</span>,</span><br><span class="line">                    <span class="attr">"ignoreFailures"</span>: <span class="literal">true</span></span><br><span class="line">                &#125;</span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">"preLaunchTask"</span>: <span class="string">"make"</span>   <span class="comment">//预先启动的task的脚本，task.json 是代码的编译相关脚本</span></span><br><span class="line">          <span class="comment">//  make 只是任务的标签</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>launch.json 为 VS code 这个IDE 的环境相关的配置脚本，不同的代码语言，不同的环境，通常对应不同的设置。 环境加载好了，那么就剩编译代码了。task.json 就是代码编译相关脚本。</p><h5 id="taskjson-配置如下"><a class="markdownIt-Anchor" href="#taskjson-配置如下"></a> task.json 配置如下：</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"2.0.0"</span>,</span><br><span class="line">    <span class="attr">"tasks"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"label"</span>: <span class="string">"cmake"</span>,</span><br><span class="line">            <span class="attr">"options"</span>: &#123;</span><br><span class="line">                <span class="attr">"cwd"</span>: <span class="string">"$&#123;workspaceFolder&#125;/build"</span>    <span class="comment">//切换到build 下，重要！</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"shell"</span>,</span><br><span class="line">            <span class="attr">"command"</span>: <span class="string">"cmake -G 'Unix Makefiles' -DCMAKE_BUILD_TYPE=Debug .. "</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"label"</span>: <span class="string">"make"</span>,</span><br><span class="line">            <span class="attr">"options"</span>: &#123;</span><br><span class="line">                <span class="attr">"cwd"</span>: <span class="string">"$&#123;workspaceFolder&#125;/build"</span>  <span class="comment">//切换到build 下，重要！</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"shell"</span>,</span><br><span class="line">            <span class="attr">"command"</span>: <span class="string">"make -j8"</span>,  <span class="comment">//-j n 电脑几核就可以写几，加快编译速度</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"dependsOn"</span>: [ <span class="string">"cmake"</span> ],  <span class="comment">//非常重要！ make 的执行依赖 Cmake 执行完毕，不然呵呵</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置完毕后： 按下F5 就可以开始编译调试Cmake 工程啦，还可以设置断点，美滋滋！ VS code 里面很多好用的功能就可以在大型 C/C++ 工程中派上用场啦。</p><p><img src="/2020/06/04/vscode-catkin/3.png" alt></p><p><strong>以上为自己总结，欢迎大家指出不足之处，共勉！</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;vs-code-调试cmake-工程&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#vs-code-调试cmake-工程&quot;&gt;&lt;/a&gt; VS code 调试Cmake 工程：&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;VS code  及cmake
      
    
    </summary>
    
    
    
      <category term="code tool" scheme="https://wangchangjin123.github.io/tags/code-tool/"/>
    
  </entry>
  
  <entry>
    <title>Jira 项目管理工具使用</title>
    <link href="https://wangchangjin123.github.io/2019/08/04/jira/"/>
    <id>https://wangchangjin123.github.io/2019/08/04/jira/</id>
    <published>2019-08-04T08:54:46.000Z</published>
    <updated>2020-06-04T08:58:07.523Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-jira-简介"><a class="markdownIt-Anchor" href="#一-jira-简介"></a> 一、Jira 简介</h2><p>JIRA 是目前比较流行的基于Java架构的管理系统。<strong>是一个项目管理工具</strong>，包含任务指定，实时追踪，权限管理，邮件通知等。JIRA功能全面，界面友好，安装简单，配置灵活，权限管理以及可扩展性方面都十分出色</p><p><strong>Jira 项目管理界面</strong><br><img src="http://static.zybuluo.com/wangchangjin123/j8bsib9bbqhrcudxjg49goj1/image_1e0cnuadb1f0u142mp34m013qs9.png" alt="image_1e0cnuadb1f0u142mp34m013qs9.png-205.4kB"></p><p><strong>Jira 完善的邮件通知系统</strong></p><p><img src="http://static.zybuluo.com/wangchangjin123/o5kbvuxo3l9xezrbs9qog6xr/image_1e0cuumrn1576n2c16cv15dlgjm9.png" alt="image_1e0cuumrn1576n2c16cv15dlgjm9.png-128kB"></p><p><strong>Jira 时间跟踪报告</strong><br><img src="http://static.zybuluo.com/wangchangjin123/s2ol7flmoiefd7od4yg1ok6p/image_1e0co8rt71rmshe2hoj1jqq3l713.png" alt="image_1e0co8rt71rmshe2hoj1jqq3l713.png-150.9kB"></p><p><strong>任务进度查询</strong><br><img src="http://static.zybuluo.com/wangchangjin123/9cd1022390r4g7ss39g0p577/image_1e0cod25e10jhlpamismfg19391t.png" alt="image_1e0cod25e10jhlpamismfg19391t.png-116.4kB"></p><p><strong>用户管理</strong><br><img src="http://static.zybuluo.com/wangchangjin123/sg4r3orn9ympfy40nz1fl3we/image_1e0conej71pk1jto1mbo1g931imu2n.png" alt="image_1e0conej71pk1jto1mbo1g931imu2n.png-189.3kB"><br>等等一系列功能</p><h2 id="二-jira-安装配置"><a class="markdownIt-Anchor" href="#二-jira-安装配置"></a> 二、Jira 安装配置</h2><h3 id="21-安装"><a class="markdownIt-Anchor" href="#21-安装"></a> 2.1 安装</h3><p>Jira 特指Jira software (server)，服务器版本，只需要在一台服务器电脑上安装即可，服务器可以设置成管理员电脑或者其他公用电脑。其他人登陆这个服务器地址访问就可以查看到每个人对应的任务。</p><p>服务器端安装：<br>下载：<br><a href="https://product-downloads.atlassian.com/software/jira/downloads/atlassian-jira-software-8.5.1-x64.exe" target="_blank" rel="noopener">https://product-downloads.atlassian.com/software/jira/downloads/atlassian-jira-software-8.5.1-x64.exe</a></p><p>按照默认去安装，安装完毕，输入序列号</p><p>复制进去即可。<br>运行先点：<br><img src="http://static.zybuluo.com/wangchangjin123/qc8b4z2hdygeu4e5e4dnljuu/image_1e0cp37ga1p6d1pm1sid1c80bbi34.png" alt="image_1e0cp37ga1p6d1pm1sid1c80bbi34.png-74.3kB"><br>Start Jira service 8080.<br>再点击 Access Jira 跳转至管理界面<br>此时服务器地址 为 <a href="http://localhost:8080/%E3%80%82" target="_blank" rel="noopener">http://localhost:8080/。</a></p><p>在实验室，在校园局域网下，内网IP一般固定，直接把localhost 换成 内网IP即可。如http://223.104.37.147:8080<br>不在一个局域网下，需要通过公网访问，服务器为我的笔记本。大家可以访问我搭建的临时域名：<a href="http://29035x91a2.zicp.vip/" target="_blank" rel="noopener">http://29035x91a2.zicp.vip/</a>   登陆查看自己当前状态</p><h3 id="22-设置邮件代发服务"><a class="markdownIt-Anchor" href="#22-设置邮件代发服务"></a> 2.2 设置邮件代发服务</h3><p>设置邮件代发服务，一旦被分派了任务或者任务变更，轻松通知收件人。<br><img src="http://static.zybuluo.com/wangchangjin123/hieduutenmwuutou77zlbeog/image_1e0cuhl3outs183b163i1m8t1a6ka7.png" alt="image_1e0cuhl3outs183b163i1m8t1a6ka7.png-282.5kB"></p><h3 id="23-用户管理"><a class="markdownIt-Anchor" href="#23-用户管理"></a> 2.3 用户管理</h3><p>可以管理员自己邀请用户，也可以管理员直接输入用户邮箱添加，最多10个人，管理员可以设置不同的分组权限，允许多个管理员</p><p><img src="http://static.zybuluo.com/wangchangjin123/8b6hskk5ask8d1bfq89ojhc9/image_1e0cummvl1mgs10khgltvp21vnnak.png" alt="image_1e0cummvl1mgs10khgltvp21vnnak.png-159.6kB"><br>##三、Jira 使用</p><p>###3.1 新建项目工程</p><p>新建一个business下的项目管理项目，输入项目名称，项目负责人（管理员）<br><img src="http://static.zybuluo.com/wangchangjin123/axtwqvjmbng84434hbx2mbfx/image_1e0cqbfmqihd180rgg2578veo5b.png" alt="image_1e0cqbfmqihd180rgg2578veo5b.png-106.7kB"><br>点击创建问题<br><img src="http://static.zybuluo.com/wangchangjin123/s3cgjmtg4i4jh2nlvaqc1eyi/image_1e0cqu0v5jssm02sm31efv2si5o.png" alt="image_1e0cqu0v5jssm02sm31efv2si5o.png-160.8kB"><br><img src="http://static.zybuluo.com/wangchangjin123/uztjgrajedkcakalpulnxnqe/image_1e0cstg4vt1m1tp51dibo567br6i.png" alt="image_1e0cstg4vt1m1tp51dibo567br6i.png-193.8kB"><br>将任务以及相关子任务依次输入，并输入预期完成时间</p><p>###3.2 可视化项目报告<br>包括进展，时间追踪，效率报告等，任务创建后需要实时查看相关进展以及处理情况。需要可视化评估<br><img src="http://static.zybuluo.com/wangchangjin123/kp1xrqe9sp7q3rsiqa7frluo/image_1e0ct61uf1n3bq58qq1fp71qi37c.png" alt="image_1e0ct61uf1n3bq58qq1fp71qi37c.png-192.1kB"></p><p>步骤3选择第一个scrum面板过后：<br>显示的是燃尽图，燃尽图（sprint图），燃尽图是敏捷开发框架中，在冲刺（Sprint）执行时需要用到的报表，观察任务的实际燃尽曲线与参照线的差异可以掌握当前进行中的冲刺目标的进展情况。另外，在冲刺回顾的时候，分析已完成冲刺目标的燃尽图对下一期的冲刺规划有参考意义。</p><p><img src="http://static.zybuluo.com/wangchangjin123/s171x5i007yvjx4q7pgdfnaw/image_1e0ctaual1pbg133rffp1nd39c47p.png" alt="image_1e0ctaual1pbg133rffp1nd39c47p.png-63.2kB"></p><p><img src="http://static.zybuluo.com/wangchangjin123/boywy3fsajtgtcy566rvth1a/image_1e0ctchlu12onnoh1qvv10h61ltf86.png" alt="image_1e0ctchlu12onnoh1qvv10h61ltf86.png-93.5kB"><br><img src="http://static.zybuluo.com/wangchangjin123/5eu8g620n6ore64xtd6i6gv2/image_1e0ctdmla17q61v7h1ud1bdc1s3q8j.png" alt="image_1e0ctdmla17q61v7h1ud1bdc1s3q8j.png-109.3kB"><br><img src="http://static.zybuluo.com/wangchangjin123/daa0ls26mej62de01vnz9z09/image_1e0ctej2mqnau9l1c1g1tfn1c8790.png" alt="image_1e0ctej2mqnau9l1c1g1tfn1c8790.png-92.7kB"></p><p>步骤3选择第二个面板过后：<br>待办，处理中，已完成一目了然。<br><img src="http://static.zybuluo.com/wangchangjin123/r1frjo0u3d57i8g1mcp0fcf7/image_1e0cth6mh1mpikg3isn8f01ooc9d.png" alt="image_1e0cth6mh1mpikg3isn8f01ooc9d.png-82.5kB"></p><p>#相关概念<br>参考：<a href="https://baijiahao.baidu.com/s?id=1600789671759427109&amp;wfr=spider&amp;for=pc" target="_blank" rel="noopener">https://baijiahao.baidu.com/s?id=1600789671759427109&amp;wfr=spider&amp;for=pc</a><br><strong>问题&amp;问题类型（issues）</strong><br>一个问题对应一个要解决的事项，问题还可以细分。</p><p>JIRA 系统可以用于跟踪多种不同类型的问题。系统管理员可以根据需要添加。JIRA系统缺省提供的问题类型如下：</p><pre><code>Bug'缺陷'：测试过程、维护过程发现影响系统运行的缺陷New Feature'新需求' ：对系统提出的新功能Task'任务' ：需要完成的任务Improvement'改进意见' ：对现有系统功能的改进</code></pre><p><strong>项目模块</strong><br>一个项目模块是这个项目中问题的逻辑分类集合。每个项目都可以根据你任务的要求设置多个模块(也可以不设置模块)。比如模块可以细分为研发，财务报销，采购等。并把问题归为这类方便管理。<br><strong>优先级（Priority Levels）</strong><br>在 JIRA 系统中用优先级来表示问题的严重级别。系统管理员可以在 JIRA 系统中添加优先级，JIRA系统缺省的优先级为’紧急’，‘严重’，‘一般’，‘次要’，‘无关紧要’5个级别：<br><img src="http://static.zybuluo.com/wangchangjin123/wc1tjbkhqtq3hjn0y3th3q4x/image_1e0ctspnggd1187bu88ndk1ooh9q.png" alt="image_1e0ctspnggd1187bu88ndk1ooh9q.png-202.2kB"><br><strong>项目版本</strong><br>在一个项目上，一般会有多个版本，如：1.0alpha、1.0beta、1.0、1.2、2.0。JIRA 系统中的问题涉及到两个版本字段：<br><strong>影响版本</strong>— 可以清晰地反映出这个问题在哪个版本中出现错误。例如, 一个软件的缺陷可能影响了产品的1.1和1.2版。<br><strong>修复版本</strong>— 可以反映出报告的问题将在哪个版本，或已经在哪个版本中修复了。例如, 软件缺陷影响了产品的1.1和1.2版，这个缺陷已经在2.0版中修复了。注意没有修复版本的问题会被归类到’未规划’。<br>版本可以有3个状态: <strong>已发布,未发布或已归档</strong>。版本可以设置发布日期,而JIRA会自动将到期而还没有发布的版本高亮显示出来，并标注上’超期’标志。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一-jira-简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#一-jira-简介&quot;&gt;&lt;/a&gt; 一、Jira 简介&lt;/h2&gt;
&lt;p&gt;JIRA 是目前比较流行的基于Java架构的管理系统。&lt;strong&gt;是一个项目管理工具&lt;/stron
      
    
    </summary>
    
    
    
      <category term="code tool" scheme="https://wangchangjin123.github.io/tags/code-tool/"/>
    
  </entry>
  
</feed>
